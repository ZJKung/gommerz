services:
  account:
    build:
      context: .
      dockerfile: ./account/app.dockerfile
    depends_on:
      - account_db
    environment:
      DATABASE_URL: postgres://user:P@ssw0rd@account_db/account?sslmode=disable
    restart: on-failure

  catalog:
    build:
      context: .
      dockerfile: ./catalog/app.dockerfile
    depends_on:
      catalog_db:
        condition: service_healthy
    environment:
      DATABASE_URL: http://catalog_db:9200
    restart: on-failure

  order:
    build:
      context: .
      dockerfile: ./order/app.dockerfile
    depends_on:
      - order_db
    environment:
      DATABASE_URL: postgres://user:P@ssw0rd@order_db/order?sslmode=disable
      ACCOUNT_SERVICE_URL: account:8080
      CATALOG_SERVICE_URL: catalog:8080
    restart: on-failure

  graphql:
    build:
      context: .
      dockerfile: ./graphql/app.dockerfile
    ports:
      - 8000:8080
    depends_on:
      - account
      - catalog
    environment:
      ACCOUNT_SERVICE_URL: account:8080
      CATALOG_SERVICE_URL: catalog:8080
      ORDER_SERVICE_URL: order:8080
    restart: on-failure

  account_db:
    build:
      context: ./account
      dockerfile: ./db.dockerfile
    environment:
      POSTGRES_DB: account
      POSTGRES_USER: user
      POSTGRES_PASSWORD: P@ssw0rd
    restart: unless-stopped

  catalog_db:
    image: arm64v8/elasticsearch:8.17.2
    platform: linux/arm64
    environment:
      ES_JAVA_OPTS: -Xms1g -Xmx1g
      discovery.type: single-node
      xpack.security.enabled: false
      ELASTIC_PASSWORD: changeme
      bootstrap.memory_lock: "true"
      cluster.name: "docker-cluster"
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200 || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 5
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    mem_limit: 2g
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536

  order_db:
    build:
      context: ./order
      dockerfile: ./db.dockerfile
    environment:
      POSTGRES_DB: order
      POSTGRES_USER: user
      POSTGRES_PASSWORD: P@ssw0rd
    restart: unless-stopped

volumes:
  elasticsearch-data:
